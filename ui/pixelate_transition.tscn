[gd_scene load_steps=4 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;

uniform float scale : hint_range(2f, 1000f) = 1000f;

void fragment() {
	vec2 uv = SCREEN_UV;
	uv = (uv - vec2(0.5, 0.5)) * 2.0;
	uv.x *= SCREEN_PIXEL_SIZE.y / SCREEN_PIXEL_SIZE.x;
	uv = floor(uv * scale) / scale;
	uv.x /= SCREEN_PIXEL_SIZE.y / SCREEN_PIXEL_SIZE.x;
	uv = (uv / 2.0) + vec2(0.5, 0.5);
	COLOR = textureLod(SCREEN_TEXTURE, uv, 0.0);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/scale = 1000.0

[sub_resource type="Animation" id=3]
resource_name = "Fadeout"
length = 1.6
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:material:shader_param/scale")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.5 ),
"transitions": PoolRealArray( 0.5, 1 ),
"update": 0,
"values": [ 1000.0, 2.5 ]
}
tracks/1/type = "method"
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 1.6 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}

[node name="PixelateTransition" type="CanvasLayer"]
layer = 7

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "Fadeout"
anims/Fadeout = SubResource( 3 )
